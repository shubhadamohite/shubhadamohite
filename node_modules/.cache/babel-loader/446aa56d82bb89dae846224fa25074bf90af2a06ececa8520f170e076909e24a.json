{"ast":null,"code":"var _jsxFileName = \"/Users/shubhadamohite/Downloads/portfolio/shubs/src/ConsoleWindow.js\",\n  _s = $RefreshSig$();\n// ConsoleWindow.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConsoleWindow = () => {\n  _s();\n  const [consoleOutput, setConsoleOutput] = useState([]);\n  const handleCommandSubmit = command => {\n    // Process and handle the command here\n    // You can update the consoleOutput state with the results\n    // For this example, we'll just echo back the command\n    setConsoleOutput([...consoleOutput, `> ${command}`]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed top-0 right-0 h-full w-1/4  p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Elements\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Console\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: consoleOutput.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console-output\",\n        children: output\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type a command...\",\n        onKeyDown: e => {\n          if (e.key === 'Enter') {\n            handleCommandSubmit(e.target.value);\n            e.target.value = '';\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(ConsoleWindow, \"tlRyrj8V4McVQLXTFkd5nju5+t0=\");\n_c = ConsoleWindow;\nexport default ConsoleWindow;\nvar _c;\n$RefreshReg$(_c, \"ConsoleWindow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ConsoleWindow","_s","consoleOutput","setConsoleOutput","handleCommandSubmit","command","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","output","index","type","placeholder","onKeyDown","e","key","target","value","_c","$RefreshReg$"],"sources":["/Users/shubhadamohite/Downloads/portfolio/shubs/src/ConsoleWindow.js"],"sourcesContent":["// ConsoleWindow.js\nimport React, { useState } from 'react';\n\nconst ConsoleWindow = () => {\n  const [consoleOutput, setConsoleOutput] = useState([]);\n\n  const handleCommandSubmit = (command) => {\n    // Process and handle the command here\n    // You can update the consoleOutput state with the results\n    // For this example, we'll just echo back the command\n    setConsoleOutput([...consoleOutput, `> ${command}`]);\n  };\n\n  return (\n    <div className='fixed top-0 right-0 h-full w-1/4  p-4'>\n      <div>Elements</div> \n      <div>Console</div> \n      <div>\n        {consoleOutput.map((output, index) => (\n          <div key={index} className=\"console-output\">\n            {output}\n          </div>\n        ))}\n      </div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Type a command...\"\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              handleCommandSubmit(e.target.value);\n              e.target.value = '';\n            }\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ConsoleWindow;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMO,mBAAmB,GAAIC,OAAO,IAAK;IACvC;IACA;IACA;IACAF,gBAAgB,CAAC,CAAC,GAAGD,aAAa,EAAG,KAAIG,OAAQ,EAAC,CAAC,CAAC;EACtD,CAAC;EAED,oBACEN,OAAA;IAAKO,SAAS,EAAC,uCAAuC;IAAAC,QAAA,gBACpDR,OAAA;MAAAQ,QAAA,EAAK;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnBZ,OAAA;MAAAQ,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAClBZ,OAAA;MAAAQ,QAAA,EACGL,aAAa,CAACU,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC/Bf,OAAA;QAAiBO,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EACxCM;MAAM,GADCC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGhB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACNZ,OAAA;MAAAQ,QAAA,eACER,OAAA;QACEgB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,mBAAmB;QAC/BC,SAAS,EAAGC,CAAC,IAAK;UAChB,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;YACrBf,mBAAmB,CAACc,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;YACnCH,CAAC,CAACE,MAAM,CAACC,KAAK,GAAG,EAAE;UACrB;QACF;MAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAACV,EAAA,CAnCID,aAAa;AAAAsB,EAAA,GAAbtB,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}