{"ast":null,"code":"import React__default, { createElement, Fragment } from 'react';\nimport { highlight, languages } from 'prismjs';\nimport 'prismjs/components/prism-jsx';\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nvar types = [\"video\", \"image\", \"embed\", \"figma\"];\nvar Asset = function Asset(_ref) {\n  var block = _ref.block,\n    mapImageUrl = _ref.mapImageUrl;\n  var value = block.value;\n  var type = block.value.type;\n  if (!types.includes(type)) {\n    return null;\n  }\n  var format = value.format;\n  var _ref2 = format !== null && format !== void 0 ? format : {},\n    _ref2$display_source = _ref2.display_source,\n    display_source = _ref2$display_source === void 0 ? undefined : _ref2$display_source,\n    _ref2$block_aspect_ra = _ref2.block_aspect_ratio,\n    block_aspect_ratio = _ref2$block_aspect_ra === void 0 ? undefined : _ref2$block_aspect_ra,\n    _ref2$block_height = _ref2.block_height,\n    block_height = _ref2$block_height === void 0 ? 1 : _ref2$block_height,\n    _ref2$block_width = _ref2.block_width,\n    block_width = _ref2$block_width === void 0 ? 1 : _ref2$block_width;\n  var aspectRatio = block_aspect_ratio || block_height / block_width;\n  if (type === \"embed\" || type === \"video\" || type === \"figma\") {\n    return createElement(\"div\", {\n      style: {\n        paddingBottom: aspectRatio * 100 + \"%\",\n        position: \"relative\"\n      }\n    }, createElement(\"iframe\", {\n      className: \"notion-image-inset\",\n      src: type === \"figma\" ? value.properties.source[0][0] : display_source\n    }));\n  }\n  if (block.value.type === \"image\") {\n    var _value$properties$cap;\n    var src = mapImageUrl(value.properties.source[0][0], block);\n    var caption = (_value$properties$cap = value.properties.caption) === null || _value$properties$cap === void 0 ? void 0 : _value$properties$cap[0][0];\n    if (block_aspect_ratio) {\n      return createElement(\"div\", {\n        style: {\n          paddingBottom: aspectRatio * 100 + \"%\",\n          position: \"relative\"\n        }\n      }, createElement(\"img\", {\n        className: \"notion-image-inset\",\n        alt: caption || \"notion image\",\n        src: src\n      }));\n    } else {\n      return createElement(\"img\", {\n        alt: caption,\n        src: src\n      });\n    }\n  }\n  return null;\n};\nvar Code = function Code(_ref) {\n  var code = _ref.code,\n    _ref$language = _ref.language,\n    language = _ref$language === void 0 ? \"javascript\" : _ref$language;\n  var languageL = language.toLowerCase();\n  var prismLanguage = languages[languageL] || languages.javascript;\n  var langClass = \"language-\" + language.toLowerCase();\n  return createElement(\"pre\", {\n    className: \"notion-code \" + langClass\n  }, createElement(\"code\", {\n    className: langClass,\n    dangerouslySetInnerHTML: {\n      __html: highlight(code, prismLanguage, language)\n    }\n  }));\n};\nvar classNames = function classNames() {\n  for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {\n    classes[_key] = arguments[_key];\n  }\n  return classes.filter(function (a) {\n    return !!a;\n  }).join(\" \");\n};\nvar getTextContent = function getTextContent(text) {\n  return text.reduce(function (prev, current) {\n    return prev + current[0];\n  }, \"\");\n};\nvar groupBlockContent = function groupBlockContent(blockMap) {\n  var output = [];\n  var lastType = undefined;\n  var index = -1;\n  Object.keys(blockMap).forEach(function (id) {\n    var _blockMap$id$value$co;\n    (_blockMap$id$value$co = blockMap[id].value.content) === null || _blockMap$id$value$co === void 0 ? void 0 : _blockMap$id$value$co.forEach(function (blockId) {\n      var _blockMap$blockId, _blockMap$blockId$val;\n      var blockType = (_blockMap$blockId = blockMap[blockId]) === null || _blockMap$blockId === void 0 ? void 0 : (_blockMap$blockId$val = _blockMap$blockId.value) === null || _blockMap$blockId$val === void 0 ? void 0 : _blockMap$blockId$val.type;\n      if (blockType && blockType !== lastType) {\n        index++;\n        lastType = blockType;\n        output[index] = [];\n      }\n      output[index].push(blockId);\n    });\n    lastType = undefined;\n  });\n  return output;\n};\nvar getListNumber = function getListNumber(blockId, blockMap) {\n  var groups = groupBlockContent(blockMap);\n  var group = groups.find(function (g) {\n    return g.includes(blockId);\n  });\n  if (!group) {\n    return;\n  }\n  return group.indexOf(blockId) + 1;\n};\nvar defaultMapImageUrl = function defaultMapImageUrl(image, block) {\n  if (image === void 0) {\n    image = \"\";\n  }\n  var url = new URL(\"https://www.notion.so\" + (image.startsWith(\"/image\") ? image : \"/image/\" + encodeURIComponent(image)));\n  if (block && !image.includes(\"/images/page-cover/\")) {\n    var table = block.value.parent_table === \"space\" ? \"block\" : block.value.parent_table;\n    url.searchParams.set(\"table\", table);\n    url.searchParams.set(\"id\", block.value.id);\n    url.searchParams.set(\"cache\", \"v2\");\n  }\n  return url.toString();\n};\nvar defaultMapPageUrl = function defaultMapPageUrl(pageId) {\n  if (pageId === void 0) {\n    pageId = \"\";\n  }\n  pageId = pageId.replace(/-/g, \"\");\n  return \"/\" + pageId;\n};\nvar isIconBlock = function isIconBlock(value) {\n  return value.type === \"page\" || value.type === \"callout\";\n};\nvar PageIcon = function PageIcon(_ref) {\n  var _block$value$format, _block$value$properti;\n  var block = _ref.block,\n    className = _ref.className,\n    big = _ref.big,\n    mapImageUrl = _ref.mapImageUrl;\n  if (!isIconBlock(block.value)) {\n    return null;\n  }\n  var icon = (_block$value$format = block.value.format) === null || _block$value$format === void 0 ? void 0 : _block$value$format.page_icon;\n  var title = (_block$value$properti = block.value.properties) === null || _block$value$properti === void 0 ? void 0 : _block$value$properti.title;\n  if (icon === null || icon === void 0 ? void 0 : icon.includes(\"http\")) {\n    var url = mapImageUrl(icon, block);\n    return createElement(\"img\", {\n      className: classNames(className, big ? \"notion-page-icon-cover\" : \"notion-page-icon\"),\n      src: url,\n      alt: title ? getTextContent(title) : \"Icon\"\n    });\n  } else {\n    return createElement(\"span\", {\n      className: classNames(className, \"notion-emoji\", big ? \"notion-page-icon-cover\" : \"notion-page-icon\"),\n      role: \"img\",\n      \"aria-label\": icon\n    }, icon);\n  }\n};\nvar PageHeader = function PageHeader(_ref) {\n  var blockMap = _ref.blockMap,\n    mapPageUrl = _ref.mapPageUrl,\n    mapImageUrl = _ref.mapImageUrl;\n  var blockIds = Object.keys(blockMap);\n  var activePageId = blockIds[0];\n  if (!activePageId) {\n    return null;\n  }\n  var breadcrumbs = [];\n  var currentPageId = activePageId;\n  do {\n    var _block$value$properti, _block$value$format;\n    var block = blockMap[currentPageId];\n    if (!block || !block.value) {\n      break;\n    }\n    var title = (_block$value$properti = block.value.properties) === null || _block$value$properti === void 0 ? void 0 : _block$value$properti.title[0][0];\n    var icon = (_block$value$format = block.value.format) === null || _block$value$format === void 0 ? void 0 : _block$value$format.page_icon;\n    if (!(title || icon)) {\n      break;\n    }\n    breadcrumbs.push({\n      block: block,\n      active: currentPageId === activePageId,\n      pageId: currentPageId,\n      title: title,\n      icon: icon\n    });\n    var parentId = block.value.parent_id;\n    if (!parentId) {\n      break;\n    }\n    currentPageId = parentId;\n  } while (true);\n  breadcrumbs.reverse();\n  return createElement(\"header\", {\n    className: \"notion-page-header\"\n  }, createElement(\"div\", {\n    className: \"notion-nav-breadcrumbs\"\n  }, breadcrumbs.map(function (breadcrumb, index) {\n    return createElement(Fragment, {\n      key: breadcrumb.pageId\n    }, createElement(\"a\", {\n      className: \"notion-nav-breadcrumb \" + (breadcrumb.active ? \"notion-nav-breadcrumb-active\" : \"\"),\n      href: breadcrumb.active ? undefined : mapPageUrl(breadcrumb.pageId)\n    }, breadcrumb.icon && createElement(PageIcon, {\n      className: \"notion-nav-icon\",\n      block: breadcrumb.block,\n      mapImageUrl: mapImageUrl\n    }), breadcrumb.title && createElement(\"span\", {\n      className: \"notion-nav-title\"\n    }, breadcrumb.title)), index < breadcrumbs.length - 1 && createElement(\"span\", {\n      className: \"notion-nav-spacer\"\n    }, \"/\"));\n  })));\n};\nvar createRenderChildText = function createRenderChildText(customDecoratorComponents) {\n  return function (properties) {\n    return properties === null || properties === void 0 ? void 0 : properties.map(function (_ref, i) {\n      var text = _ref[0],\n        decorations = _ref[1];\n      if (!decorations) {\n        return createElement(Fragment, {\n          key: i\n        }, text);\n      }\n      return decorations.reduceRight(function (element, decorator) {\n        var renderText = function renderText() {\n          switch (decorator[0]) {\n            case \"h\":\n              return createElement(\"span\", {\n                key: i,\n                className: \"notion-\" + decorator[1]\n              }, element);\n            case \"c\":\n              return createElement(\"code\", {\n                key: i,\n                className: \"notion-inline-code\"\n              }, element);\n            case \"b\":\n              return createElement(\"b\", {\n                key: i\n              }, element);\n            case \"i\":\n              return createElement(\"em\", {\n                key: i\n              }, element);\n            case \"s\":\n              return createElement(\"s\", {\n                key: i\n              }, element);\n            case \"a\":\n              return createElement(\"a\", {\n                className: \"notion-link\",\n                href: decorator[1],\n                key: i\n              }, element);\n            default:\n              return createElement(Fragment, {\n                key: i\n              }, element);\n          }\n        };\n        var CustomComponent = customDecoratorComponents === null || customDecoratorComponents === void 0 ? void 0 : customDecoratorComponents[decorator[0]];\n        if (CustomComponent) {\n          var props = decorator[1] ? {\n            decoratorValue: decorator[1]\n          } : {};\n          return createElement(CustomComponent, Object.assign({\n            key: i\n          }, props, {\n            renderComponent: renderText\n          }), text);\n        }\n        return renderText();\n      }, createElement(Fragment, null, text));\n    });\n  };\n};\nvar Block = function Block(props) {\n  var block = props.block,\n    children = props.children,\n    level = props.level,\n    fullPage = props.fullPage,\n    hideHeader = props.hideHeader,\n    blockMap = props.blockMap,\n    mapPageUrl = props.mapPageUrl,\n    mapImageUrl = props.mapImageUrl,\n    customBlockComponents = props.customBlockComponents,\n    customDecoratorComponents = props.customDecoratorComponents;\n  var blockValue = block === null || block === void 0 ? void 0 : block.value;\n  var renderComponent = function renderComponent() {\n    var _blockValue$format, _block$collection, _block$collection2, _collectionView$forma, _collectionView$forma2, _block$collection4, _block$collection6, _blockValue$propertie, _blockValue$format2, _blockValue$format3, _blockValue$format4;\n    var renderChildText = createRenderChildText(customDecoratorComponents);\n    switch (blockValue === null || blockValue === void 0 ? void 0 : blockValue.type) {\n      case \"page\":\n        if (level === 0) {\n          if (fullPage) {\n            if (!blockValue.properties) {\n              return null;\n            }\n            var _ref2 = blockValue.format || {},\n              page_icon = _ref2.page_icon,\n              page_cover = _ref2.page_cover,\n              page_cover_position = _ref2.page_cover_position,\n              page_full_width = _ref2.page_full_width,\n              page_small_text = _ref2.page_small_text;\n            var coverPosition = (1 - (page_cover_position || 0.5)) * 100;\n            return createElement(\"div\", {\n              className: \"notion\"\n            }, !hideHeader && createElement(PageHeader, {\n              blockMap: blockMap,\n              mapPageUrl: mapPageUrl,\n              mapImageUrl: mapImageUrl\n            }), page_cover && createElement(\"img\", {\n              src: mapImageUrl(page_cover, block),\n              alt: getTextContent(blockValue.properties.title),\n              className: \"notion-page-cover\",\n              style: {\n                objectPosition: \"center \" + coverPosition + \"%\"\n              }\n            }), createElement(\"main\", {\n              className: classNames(\"notion-page\", !page_cover && \"notion-page-offset\", page_full_width && \"notion-full-width\", page_small_text && \"notion-small-text\")\n            }, page_icon && createElement(PageIcon, {\n              className: page_cover ? \"notion-page-icon-offset\" : undefined,\n              block: block,\n              big: true,\n              mapImageUrl: mapImageUrl\n            }), createElement(\"div\", {\n              className: \"notion-title\"\n            }, renderChildText(blockValue.properties.title)), children));\n          } else {\n            return createElement(\"main\", {\n              className: \"notion\"\n            }, children);\n          }\n        } else {\n          if (!blockValue.properties) return null;\n          return createElement(\"a\", {\n            className: \"notion-page-link\",\n            href: mapPageUrl(blockValue.id)\n          }, blockValue.format && createElement(\"div\", {\n            className: \"notion-page-icon\"\n          }, createElement(PageIcon, {\n            block: block,\n            mapImageUrl: mapImageUrl\n          })), createElement(\"div\", {\n            className: \"notion-page-text\"\n          }, renderChildText(blockValue.properties.title)));\n        }\n      case \"header\":\n        if (!blockValue.properties) return null;\n        return createElement(\"h1\", {\n          className: \"notion-h1\"\n        }, renderChildText(blockValue.properties.title));\n      case \"sub_header\":\n        if (!blockValue.properties) return null;\n        return createElement(\"h2\", {\n          className: \"notion-h2\"\n        }, renderChildText(blockValue.properties.title));\n      case \"sub_sub_header\":\n        if (!blockValue.properties) return null;\n        return createElement(\"h3\", {\n          className: \"notion-h3\"\n        }, renderChildText(blockValue.properties.title));\n      case \"divider\":\n        return createElement(\"hr\", {\n          className: \"notion-hr\"\n        });\n      case \"text\":\n        if (!blockValue.properties) {\n          return createElement(\"div\", {\n            className: \"notion-blank\"\n          }, \"\\xA0\");\n        }\n        var blockColor = (_blockValue$format = blockValue.format) === null || _blockValue$format === void 0 ? void 0 : _blockValue$format.block_color;\n        return createElement(\"p\", {\n          className: classNames(\"notion-text\", blockColor && \"notion-\" + blockColor)\n        }, renderChildText(blockValue.properties.title));\n      case \"bulleted_list\":\n      case \"numbered_list\":\n        var wrapList = function wrapList(content, start) {\n          return blockValue.type === \"bulleted_list\" ? createElement(\"ul\", {\n            className: \"notion-list notion-list-disc\"\n          }, content) : createElement(\"ol\", {\n            start: start,\n            className: \"notion-list notion-list-numbered\"\n          }, content);\n        };\n        var output = null;\n        if (blockValue.content) {\n          output = createElement(Fragment, null, blockValue.properties && createElement(\"li\", null, renderChildText(blockValue.properties.title)), wrapList(children));\n        } else {\n          output = blockValue.properties ? createElement(\"li\", null, renderChildText(blockValue.properties.title)) : null;\n        }\n        var isTopLevel = block.value.type !== blockMap[block.value.parent_id].value.type;\n        var start = getListNumber(blockValue.id, blockMap);\n        return isTopLevel ? wrapList(output, start) : output;\n      case \"image\":\n      case \"embed\":\n      case \"figma\":\n      case \"video\":\n        var value = block.value;\n        return createElement(\"figure\", {\n          className: \"notion-asset-wrapper\",\n          style: value.format !== undefined ? {\n            width: value.format.block_width\n          } : undefined\n        }, createElement(Asset, {\n          block: block,\n          mapImageUrl: mapImageUrl\n        }), value.properties.caption && createElement(\"figcaption\", {\n          className: \"notion-image-caption\"\n        }, renderChildText(value.properties.caption)));\n      case \"code\":\n        {\n          if (blockValue.properties.title) {\n            var content = blockValue.properties.title[0][0];\n            var language = blockValue.properties.language[0][0];\n            return createElement(Code, {\n              key: blockValue.id,\n              language: language || \"\",\n              code: content\n            });\n          }\n          break;\n        }\n      case \"column_list\":\n        return createElement(\"div\", {\n          className: \"notion-row\"\n        }, children);\n      case \"column\":\n        var spacerWith = 46;\n        var ratio = blockValue.format.column_ratio;\n        var columns = Number((1 / ratio).toFixed(0));\n        var spacerTotalWith = (columns - 1) * spacerWith;\n        var width = \"calc((100% - \" + spacerTotalWith + \"px) * \" + ratio + \")\";\n        return createElement(Fragment, null, createElement(\"div\", {\n          className: \"notion-column\",\n          style: {\n            width: width\n          }\n        }, children), createElement(\"div\", {\n          className: \"notion-spacer\",\n          style: {\n            width: spacerWith\n          }\n        }));\n      case \"quote\":\n        if (!blockValue.properties) return null;\n        return createElement(\"blockquote\", {\n          className: \"notion-quote\"\n        }, renderChildText(blockValue.properties.title));\n      case \"collection_view\":\n        if (!block) return null;\n        var collectionView = block === null || block === void 0 ? void 0 : (_block$collection = block.collection) === null || _block$collection === void 0 ? void 0 : _block$collection.types[0];\n        return createElement(\"div\", null, createElement(\"h3\", {\n          className: \"notion-h3\"\n        }, renderChildText((_block$collection2 = block.collection) === null || _block$collection2 === void 0 ? void 0 : _block$collection2.title)), (collectionView === null || collectionView === void 0 ? void 0 : collectionView.type) === \"table\" && createElement(\"div\", {\n          style: {\n            maxWidth: \"100%\",\n            marginTop: 5\n          }\n        }, createElement(\"table\", {\n          className: \"notion-table\"\n        }, createElement(\"thead\", null, createElement(\"tr\", {\n          className: \"notion-tr\"\n        }, (_collectionView$forma = collectionView.format) === null || _collectionView$forma === void 0 ? void 0 : (_collectionView$forma2 = _collectionView$forma.table_properties) === null || _collectionView$forma2 === void 0 ? void 0 : _collectionView$forma2.filter(function (p) {\n          return p.visible;\n        }).map(function (gp, index) {\n          var _block$collection3, _block$collection3$sc;\n          return createElement(\"th\", {\n            className: \"notion-th\",\n            key: index,\n            style: {\n              minWidth: gp.width\n            }\n          }, (_block$collection3 = block.collection) === null || _block$collection3 === void 0 ? void 0 : (_block$collection3$sc = _block$collection3.schema[gp.property]) === null || _block$collection3$sc === void 0 ? void 0 : _block$collection3$sc.name);\n        }))), createElement(\"tbody\", null, block === null || block === void 0 ? void 0 : (_block$collection4 = block.collection) === null || _block$collection4 === void 0 ? void 0 : _block$collection4.data.map(function (row, index) {\n          var _collectionView$forma3, _collectionView$forma4;\n          return createElement(\"tr\", {\n            className: \"notion-tr\",\n            key: index\n          }, (_collectionView$forma3 = collectionView.format) === null || _collectionView$forma3 === void 0 ? void 0 : (_collectionView$forma4 = _collectionView$forma3.table_properties) === null || _collectionView$forma4 === void 0 ? void 0 : _collectionView$forma4.filter(function (p) {\n            return p.visible;\n          }).map(function (gp, index) {\n            var _block$collection5, _block$collection5$sc;\n            return createElement(\"td\", {\n              key: index,\n              className: \"notion-td \" + (gp.property === \"title\" ? \"notion-bold\" : \"\")\n            }, renderChildText(row[(_block$collection5 = block.collection) === null || _block$collection5 === void 0 ? void 0 : (_block$collection5$sc = _block$collection5.schema[gp.property]) === null || _block$collection5$sc === void 0 ? void 0 : _block$collection5$sc.name]));\n          }));\n        })))), (collectionView === null || collectionView === void 0 ? void 0 : collectionView.type) === \"gallery\" && createElement(\"div\", {\n          className: \"notion-gallery\"\n        }, (_block$collection6 = block.collection) === null || _block$collection6 === void 0 ? void 0 : _block$collection6.data.map(function (row, i) {\n          var _collectionView$forma5, _collectionView$forma6;\n          return createElement(\"div\", {\n            key: \"col-\" + i,\n            className: \"notion-gallery-card\"\n          }, createElement(\"div\", {\n            className: \"notion-gallery-content\"\n          }, (_collectionView$forma5 = collectionView.format) === null || _collectionView$forma5 === void 0 ? void 0 : (_collectionView$forma6 = _collectionView$forma5.gallery_properties) === null || _collectionView$forma6 === void 0 ? void 0 : _collectionView$forma6.filter(function (p) {\n            return p.visible;\n          }).map(function (gp, idx) {\n            var _block$collection7;\n            return createElement(\"p\", {\n              key: idx + \"item\",\n              className: \"notion-gallery-data \" + (idx === 0 ? \"is-first\" : \"\")\n            }, getTextContent(row[(_block$collection7 = block.collection) === null || _block$collection7 === void 0 ? void 0 : _block$collection7.schema[gp.property].name]));\n          })));\n        })));\n      case \"callout\":\n        return createElement(\"div\", {\n          className: classNames(\"notion-callout\", blockValue.format.block_color && \"notion-\" + blockValue.format.block_color, blockValue.format.block_color && \"notion-\" + blockValue.format.block_color + \"_co\")\n        }, createElement(\"div\", null, createElement(PageIcon, {\n          block: block,\n          mapImageUrl: mapImageUrl\n        })), createElement(\"div\", {\n          className: \"notion-callout-text\"\n        }, renderChildText(blockValue.properties.title)));\n      case \"bookmark\":\n        var link = blockValue.properties.link;\n        var title = (_blockValue$propertie = blockValue.properties.title) !== null && _blockValue$propertie !== void 0 ? _blockValue$propertie : link;\n        var description = blockValue.properties.description;\n        var block_color = (_blockValue$format2 = blockValue.format) === null || _blockValue$format2 === void 0 ? void 0 : _blockValue$format2.block_color;\n        var bookmark_icon = (_blockValue$format3 = blockValue.format) === null || _blockValue$format3 === void 0 ? void 0 : _blockValue$format3.bookmark_icon;\n        var bookmark_cover = (_blockValue$format4 = blockValue.format) === null || _blockValue$format4 === void 0 ? void 0 : _blockValue$format4.bookmark_cover;\n        return createElement(\"div\", {\n          className: \"notion-row\"\n        }, createElement(\"a\", {\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: classNames(\"notion-bookmark\", block_color && \"notion-\" + block_color),\n          href: link[0][0]\n        }, createElement(\"div\", null, createElement(\"div\", {\n          className: \"notion-bookmark-title\"\n        }, renderChildText(title)), description && createElement(\"div\", {\n          className: \"notion-bookmark-description\"\n        }, renderChildText(description)), createElement(\"div\", {\n          className: \"notion-bookmark-link\"\n        }, bookmark_icon && createElement(\"img\", {\n          src: bookmark_icon,\n          alt: getTextContent(title)\n        }), createElement(\"div\", null, renderChildText(link)))), bookmark_cover && createElement(\"div\", {\n          className: \"notion-bookmark-image\"\n        }, createElement(\"img\", {\n          src: bookmark_cover,\n          alt: getTextContent(title)\n        }))));\n      case \"toggle\":\n        return createElement(\"details\", {\n          className: \"notion-toggle\"\n        }, createElement(\"summary\", null, renderChildText(blockValue.properties.title)), createElement(\"div\", null, children));\n      default:\n        if (process.env.NODE_ENV !== \"production\") {\n          var _block$value;\n          console.log(\"Unsupported type \" + (block === null || block === void 0 ? void 0 : (_block$value = block.value) === null || _block$value === void 0 ? void 0 : _block$value.type));\n        }\n        return createElement(\"div\", null);\n    }\n    return null;\n  }; // render a custom component first if passed.\n\n  if (customBlockComponents && customBlockComponents[blockValue === null || blockValue === void 0 ? void 0 : blockValue.type] &&\n  // Do not use custom component for base page block\n  level !== 0) {\n    var CustomComponent = customBlockComponents[blockValue === null || blockValue === void 0 ? void 0 : blockValue.type];\n    return createElement(CustomComponent, {\n      renderComponent: renderComponent,\n      blockMap: blockMap,\n      blockValue: blockValue,\n      level: level\n    }, children);\n  }\n  return renderComponent();\n};\nvar NotionRenderer = function NotionRenderer(_ref) {\n  var _currentBlock$value, _currentBlock$value$c;\n  var _ref$level = _ref.level,\n    level = _ref$level === void 0 ? 0 : _ref$level,\n    currentId = _ref.currentId,\n    _ref$mapPageUrl = _ref.mapPageUrl,\n    mapPageUrl = _ref$mapPageUrl === void 0 ? defaultMapPageUrl : _ref$mapPageUrl,\n    _ref$mapImageUrl = _ref.mapImageUrl,\n    mapImageUrl = _ref$mapImageUrl === void 0 ? defaultMapImageUrl : _ref$mapImageUrl,\n    props = _objectWithoutPropertiesLoose(_ref, [\"level\", \"currentId\", \"mapPageUrl\", \"mapImageUrl\"]);\n  var blockMap = props.blockMap;\n  var id = currentId || Object.keys(blockMap)[0];\n  var currentBlock = blockMap[id];\n  if (!currentBlock) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\"error rendering block\", currentId);\n    }\n    return null;\n  }\n  return React__default.createElement(Block, Object.assign({\n    key: id,\n    level: level,\n    block: currentBlock,\n    mapPageUrl: mapPageUrl,\n    mapImageUrl: mapImageUrl\n  }, props), currentBlock === null || currentBlock === void 0 ? void 0 : (_currentBlock$value = currentBlock.value) === null || _currentBlock$value === void 0 ? void 0 : (_currentBlock$value$c = _currentBlock$value.content) === null || _currentBlock$value$c === void 0 ? void 0 : _currentBlock$value$c.map(function (contentId) {\n    return React__default.createElement(NotionRenderer, Object.assign({\n      key: contentId,\n      currentId: contentId,\n      level: level + 1,\n      mapPageUrl: mapPageUrl,\n      mapImageUrl: mapImageUrl\n    }, props));\n  }));\n};\nexport { Block, NotionRenderer, classNames, createRenderChildText, defaultMapImageUrl, defaultMapPageUrl, getListNumber, getTextContent };","map":{"version":3,"names":["types","Asset","_ref","block","mapImageUrl","value","type","includes","format","display_source","_ref2$display_source","undefined","block_aspect_ratio","_ref2$block_aspect_ra","block_height","_ref2$block_height","block_width","_ref2$block_width","aspectRatio","createElement","style","paddingBottom","position","className","src","properties","source","_value$properties$cap","caption","alt","Code","code","language","_ref$language","languageL","toLowerCase","prismLanguage","languages","javascript","langClass","dangerouslySetInnerHTML","__html","highlight","classNames","_len","arguments","length","classes","Array","_key","filter","a","join","getTextContent","text","reduce","prev","current","groupBlockContent","blockMap","output","lastType","index","Object","keys","forEach","id","_blockMap$id$value$co","content","blockId","blockType","_blockMap$blockId","_blockMap$blockId$val","push","getListNumber","groups","group","find","g","indexOf","defaultMapImageUrl","image","url","URL","startsWith","encodeURIComponent","table","parent_table","searchParams","set","toString","defaultMapPageUrl","pageId","replace","isIconBlock","PageIcon","big","icon","_block$value$format","page_icon","title","_block$value$properti","role","PageHeader","mapPageUrl","blockIds","activePageId","breadcrumbs","currentPageId","active","parentId","parent_id","reverse","map","breadcrumb","Fragment","key","href","createRenderChildText","customDecoratorComponents","i","decorations","reduceRight","element","decorator","renderText","CustomComponent","props","decoratorValue","assign","renderComponent","Block","children","level","fullPage","hideHeader","customBlockComponents","blockValue","renderChildText","_ref2","page_cover","page_cover_position","page_full_width","page_small_text","coverPosition","objectPosition","blockColor","_blockValue$format","block_color","wrapList","start","isTopLevel","width","spacerWith","ratio","column_ratio","columns","Number","toFixed","spacerTotalWith","collectionView","_block$collection","collection","_block$collection2","maxWidth","marginTop","_collectionView$forma","_collectionView$forma2","table_properties","p","visible","gp","_block$collection3","_block$collection3$sc","minWidth","schema","property","name","_block$collection4","data","row","_collectionView$forma3","_collectionView$forma4","_block$collection5","_block$collection5$sc","_block$collection6","_collectionView$forma5","_collectionView$forma6","gallery_properties","idx","_block$collection7","link","_blockValue$propertie","description","_blockValue$format2","bookmark_icon","_blockValue$format3","bookmark_cover","_blockValue$format4","target","rel","process","env","NODE_ENV","_block$value","console","log","NotionRenderer","_ref$level","currentId","_ref$mapPageUrl","_ref$mapImageUrl","_objectWithoutPropertiesLoose","currentBlock","warn","React__default","_currentBlock$value","_currentBlock$value$c","contentId"],"sources":["/Users/shubhadamohite/Downloads/portfolio/shubs/node_modules/react-notion/src/components/asset.tsx","/Users/shubhadamohite/Downloads/portfolio/shubs/node_modules/react-notion/src/components/code.tsx","/Users/shubhadamohite/Downloads/portfolio/shubs/node_modules/react-notion/src/utils.ts","/Users/shubhadamohite/Downloads/portfolio/shubs/node_modules/react-notion/src/components/page-icon.tsx","/Users/shubhadamohite/Downloads/portfolio/shubs/node_modules/react-notion/src/components/page-header.tsx","/Users/shubhadamohite/Downloads/portfolio/shubs/node_modules/react-notion/src/block.tsx","/Users/shubhadamohite/Downloads/portfolio/shubs/node_modules/react-notion/src/renderer.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { BlockType, ContentValueType, MapImageUrl } from \"../types\";\n\nconst types = [\"video\", \"image\", \"embed\", \"figma\"];\n\nconst Asset: React.FC<{\n  block: BlockType;\n  mapImageUrl: MapImageUrl;\n}> = ({ block, mapImageUrl }) => {\n  const value = block.value as ContentValueType;\n  const type = block.value.type;\n\n  if (!types.includes(type)) {\n    return null;\n  }\n\n  const format = value.format;\n  const {\n    display_source = undefined,\n    block_aspect_ratio = undefined,\n    block_height = 1,\n    block_width = 1\n  } = format ?? {};\n\n  const aspectRatio = block_aspect_ratio || block_height / block_width;\n\n  if (type === \"embed\" || type === \"video\" || type === \"figma\") {\n    return (\n      <div\n        style={{\n          paddingBottom: `${aspectRatio * 100}%`,\n          position: \"relative\"\n        }}\n      >\n        <iframe\n          className=\"notion-image-inset\"\n          src={\n            type === \"figma\" ? value.properties.source[0][0] : display_source\n          }\n        />\n      </div>\n    );\n  }\n\n  if (block.value.type === \"image\") {\n    const src = mapImageUrl(value.properties.source[0][0], block);\n    const caption = value.properties.caption?.[0][0];\n\n    if (block_aspect_ratio) {\n      return (\n        <div\n          style={{\n            paddingBottom: `${aspectRatio * 100}%`,\n            position: \"relative\"\n          }}\n        >\n          <img\n            className=\"notion-image-inset\"\n            alt={caption || \"notion image\"}\n            src={src}\n          />\n        </div>\n      );\n    } else {\n      return <img alt={caption} src={src} />;\n    }\n  }\n\n  return null;\n};\n\nexport default Asset;\n","import * as React from \"react\";\nimport { highlight, languages } from \"prismjs\";\nimport \"prismjs/components/prism-jsx\";\n\nconst Code: React.FC<{ code: string; language: string }> = ({\n  code,\n  language = \"javascript\"\n}) => {\n  const languageL = language.toLowerCase();\n  const prismLanguage = languages[languageL] || languages.javascript;\n\n  const langClass = `language-${language.toLowerCase()}`;\n\n  return (\n    <pre className={`notion-code ${langClass}`}>\n      <code\n        className={langClass}\n        dangerouslySetInnerHTML={{\n          __html: highlight(code, prismLanguage, language)\n        }}\n      />\n    </pre>\n  );\n};\n\nexport default Code;\n","import { DecorationType, BlockMapType, MapImageUrl } from \"./types\";\n\nexport const classNames = (...classes: Array<string | undefined | false>) =>\n  classes.filter(a => !!a).join(\" \");\n\nexport const getTextContent = (text: DecorationType[]) => {\n  return text.reduce((prev, current) => prev + current[0], \"\");\n};\n\nconst groupBlockContent = (blockMap: BlockMapType): string[][] => {\n  const output: string[][] = [];\n\n  let lastType: string | undefined = undefined;\n  let index = -1;\n\n  Object.keys(blockMap).forEach(id => {\n    blockMap[id].value.content?.forEach(blockId => {\n      const blockType = blockMap[blockId]?.value?.type;\n\n      if (blockType && blockType !== lastType) {\n        index++;\n        lastType = blockType;\n        output[index] = [];\n      }\n\n      output[index].push(blockId);\n    });\n\n    lastType = undefined;\n  });\n\n  return output;\n};\n\nexport const getListNumber = (blockId: string, blockMap: BlockMapType) => {\n  const groups = groupBlockContent(blockMap);\n  const group = groups.find(g => g.includes(blockId));\n\n  if (!group) {\n    return;\n  }\n\n  return group.indexOf(blockId) + 1;\n};\n\nexport const defaultMapImageUrl: MapImageUrl = (image = \"\", block) => {\n  const url = new URL(\n    `https://www.notion.so${\n      image.startsWith(\"/image\") ? image : `/image/${encodeURIComponent(image)}`\n    }`\n  );\n\n  if (block && !image.includes(\"/images/page-cover/\")) {\n    const table =\n      block.value.parent_table === \"space\" ? \"block\" : block.value.parent_table;\n    url.searchParams.set(\"table\", table);\n    url.searchParams.set(\"id\", block.value.id);\n    url.searchParams.set(\"cache\", \"v2\");\n  }\n\n  return url.toString();\n};\n\nexport const defaultMapPageUrl = (pageId: string = \"\") => {\n  pageId = pageId.replace(/-/g, \"\");\n\n  return `/${pageId}`;\n};\n","import * as React from \"react\";\nimport {\n  BlockType,\n  PageValueType,\n  BlockValueType,\n  CalloutValueType,\n  MapImageUrl\n} from \"../types\";\nimport { getTextContent, classNames } from \"../utils\";\n\nconst isIconBlock = (\n  value: BlockValueType\n): value is PageValueType | CalloutValueType => {\n  return value.type === \"page\" || value.type === \"callout\";\n};\n\ninterface AssetProps {\n  block: BlockType;\n  mapImageUrl: MapImageUrl;\n  big?: boolean;\n  className?: string;\n}\n\nconst PageIcon: React.FC<AssetProps> = ({\n  block,\n  className,\n  big,\n  mapImageUrl\n}) => {\n  if (!isIconBlock(block.value)) {\n    return null;\n  }\n  const icon = block.value.format?.page_icon;\n  const title = block.value.properties?.title;\n\n  if (icon?.includes(\"http\")) {\n    const url = mapImageUrl(icon, block);\n\n    return (\n      <img\n        className={classNames(\n          className,\n          big ? \"notion-page-icon-cover\" : \"notion-page-icon\"\n        )}\n        src={url}\n        alt={title ? getTextContent(title) : \"Icon\"}\n      />\n    );\n  } else {\n    return (\n      <span\n        className={classNames(\n          className,\n          \"notion-emoji\",\n          big ? \"notion-page-icon-cover\" : \"notion-page-icon\"\n        )}\n        role=\"img\"\n        aria-label={icon}\n      >\n        {icon}\n      </span>\n    );\n  }\n};\n\nexport default PageIcon;\n","import * as React from \"react\";\n\nimport { BlockMapType, MapPageUrl, MapImageUrl } from \"../types\";\nimport PageIcon from \"./page-icon\";\n\ninterface PageHeaderProps {\n  blockMap: BlockMapType;\n  mapPageUrl: MapPageUrl;\n  mapImageUrl: MapImageUrl;\n}\n\nconst PageHeader: React.FC<PageHeaderProps> = ({\n  blockMap,\n  mapPageUrl,\n  mapImageUrl\n}) => {\n  const blockIds = Object.keys(blockMap);\n  const activePageId = blockIds[0];\n\n  if (!activePageId) {\n    return null;\n  }\n\n  const breadcrumbs = [];\n  let currentPageId = activePageId;\n\n  do {\n    const block = blockMap[currentPageId];\n    if (!block || !block.value) {\n      break;\n    }\n\n    const title = block.value.properties?.title[0][0];\n    const icon = (block.value as any).format?.page_icon;\n\n    if (!(title || icon)) {\n      break;\n    }\n\n    breadcrumbs.push({\n      block,\n      active: currentPageId === activePageId,\n      pageId: currentPageId,\n      title,\n      icon\n    });\n\n    const parentId = block.value.parent_id;\n\n    if (!parentId) {\n      break;\n    }\n\n    currentPageId = parentId;\n  } while (true);\n\n  breadcrumbs.reverse();\n\n  return (\n    <header className=\"notion-page-header\">\n      <div className=\"notion-nav-breadcrumbs\">\n        {breadcrumbs.map((breadcrumb, index) => (\n          <React.Fragment key={breadcrumb.pageId}>\n            <a\n              className={`notion-nav-breadcrumb ${\n                breadcrumb.active ? \"notion-nav-breadcrumb-active\" : \"\"\n              }`}\n              href={\n                breadcrumb.active ? undefined : mapPageUrl(breadcrumb.pageId)\n              }\n            >\n              {breadcrumb.icon && (\n                <PageIcon\n                  className=\"notion-nav-icon\"\n                  block={breadcrumb.block}\n                  mapImageUrl={mapImageUrl}\n                />\n              )}\n\n              {breadcrumb.title && (\n                <span className=\"notion-nav-title\">{breadcrumb.title}</span>\n              )}\n            </a>\n\n            {index < breadcrumbs.length - 1 && (\n              <span className=\"notion-nav-spacer\">/</span>\n            )}\n          </React.Fragment>\n        ))}\n      </div>\n    </header>\n  );\n};\n\nexport default PageHeader;\n","import * as React from \"react\";\nimport {\n  DecorationType,\n  BlockType,\n  ContentValueType,\n  BlockMapType,\n  MapPageUrl,\n  MapImageUrl,\n  CustomBlockComponents,\n  BlockValueProp,\n  CustomDecoratorComponents,\n  CustomDecoratorComponentProps\n} from \"./types\";\nimport Asset from \"./components/asset\";\nimport Code from \"./components/code\";\nimport PageIcon from \"./components/page-icon\";\nimport PageHeader from \"./components/page-header\";\nimport { classNames, getTextContent, getListNumber } from \"./utils\";\n\nexport const createRenderChildText = (\n  customDecoratorComponents?: CustomDecoratorComponents\n) => (properties: DecorationType[]) => {\n  return properties?.map(([text, decorations], i) => {\n    if (!decorations) {\n      return <React.Fragment key={i}>{text}</React.Fragment>;\n    }\n\n    return decorations.reduceRight((element, decorator) => {\n      const renderText = () => {\n        switch (decorator[0]) {\n          case \"h\":\n            return (\n              <span key={i} className={`notion-${decorator[1]}`}>\n                {element}\n              </span>\n            );\n          case \"c\":\n            return (\n              <code key={i} className=\"notion-inline-code\">\n                {element}\n              </code>\n            );\n          case \"b\":\n            return <b key={i}>{element}</b>;\n          case \"i\":\n            return <em key={i}>{element}</em>;\n          case \"s\":\n            return <s key={i}>{element}</s>;\n          case \"a\":\n            return (\n              <a className=\"notion-link\" href={decorator[1]} key={i}>\n                {element}\n              </a>\n            );\n\n          default:\n            return <React.Fragment key={i}>{element}</React.Fragment>;\n        }\n      };\n\n      const CustomComponent = customDecoratorComponents?.[decorator[0]];\n\n      if (CustomComponent) {\n        const props = (decorator[1]\n          ? {\n              decoratorValue: decorator[1]\n            }\n          : {}) as CustomDecoratorComponentProps<typeof decorator[0]>;\n\n        return (\n          <CustomComponent\n            key={i}\n            {...(props as any)}\n            renderComponent={renderText}\n          >\n            {text}\n          </CustomComponent>\n        );\n      }\n\n      return renderText();\n    }, <>{text}</>);\n  });\n};\n\ninterface Block {\n  block: BlockType;\n  level: number;\n  blockMap: BlockMapType;\n  mapPageUrl: MapPageUrl;\n  mapImageUrl: MapImageUrl;\n\n  fullPage?: boolean;\n  hideHeader?: boolean;\n  customBlockComponents?: CustomBlockComponents;\n  customDecoratorComponents?: CustomDecoratorComponents;\n}\n\nexport const Block: React.FC<Block> = props => {\n  const {\n    block,\n    children,\n    level,\n    fullPage,\n    hideHeader,\n    blockMap,\n    mapPageUrl,\n    mapImageUrl,\n    customBlockComponents,\n    customDecoratorComponents\n  } = props;\n  const blockValue = block?.value;\n\n  const renderComponent = () => {\n    const renderChildText = createRenderChildText(customDecoratorComponents);\n\n    switch (blockValue?.type) {\n      case \"page\":\n        if (level === 0) {\n          if (fullPage) {\n            if (!blockValue.properties) {\n              return null;\n            }\n\n            const {\n              page_icon,\n              page_cover,\n              page_cover_position,\n              page_full_width,\n              page_small_text\n            } = blockValue.format || {};\n\n            const coverPosition = (1 - (page_cover_position || 0.5)) * 100;\n\n            return (\n              <div className=\"notion\">\n                {!hideHeader && (\n                  <PageHeader\n                    blockMap={blockMap}\n                    mapPageUrl={mapPageUrl}\n                    mapImageUrl={mapImageUrl}\n                  />\n                )}\n                {page_cover && (\n                  <img\n                    src={mapImageUrl(page_cover, block)}\n                    alt={getTextContent(blockValue.properties.title)}\n                    className=\"notion-page-cover\"\n                    style={{\n                      objectPosition: `center ${coverPosition}%`\n                    }}\n                  />\n                )}\n                <main\n                  className={classNames(\n                    \"notion-page\",\n                    !page_cover && \"notion-page-offset\",\n                    page_full_width && \"notion-full-width\",\n                    page_small_text && \"notion-small-text\"\n                  )}\n                >\n                  {page_icon && (\n                    <PageIcon\n                      className={\n                        page_cover ? \"notion-page-icon-offset\" : undefined\n                      }\n                      block={block}\n                      big\n                      mapImageUrl={mapImageUrl}\n                    />\n                  )}\n\n                  <div className=\"notion-title\">\n                    {renderChildText(blockValue.properties.title)}\n                  </div>\n\n                  {children}\n                </main>\n              </div>\n            );\n          } else {\n            return <main className=\"notion\">{children}</main>;\n          }\n        } else {\n          if (!blockValue.properties) return null;\n          return (\n            <a className=\"notion-page-link\" href={mapPageUrl(blockValue.id)}>\n              {blockValue.format && (\n                <div className=\"notion-page-icon\">\n                  <PageIcon block={block} mapImageUrl={mapImageUrl} />\n                </div>\n              )}\n              <div className=\"notion-page-text\">\n                {renderChildText(blockValue.properties.title)}\n              </div>\n            </a>\n          );\n        }\n      case \"header\":\n        if (!blockValue.properties) return null;\n        return (\n          <h1 className=\"notion-h1\">\n            {renderChildText(blockValue.properties.title)}\n          </h1>\n        );\n      case \"sub_header\":\n        if (!blockValue.properties) return null;\n        return (\n          <h2 className=\"notion-h2\">\n            {renderChildText(blockValue.properties.title)}\n          </h2>\n        );\n      case \"sub_sub_header\":\n        if (!blockValue.properties) return null;\n        return (\n          <h3 className=\"notion-h3\">\n            {renderChildText(blockValue.properties.title)}\n          </h3>\n        );\n      case \"divider\":\n        return <hr className=\"notion-hr\" />;\n      case \"text\":\n        if (!blockValue.properties) {\n          return <div className=\"notion-blank\">&nbsp;</div>;\n        }\n        const blockColor = blockValue.format?.block_color;\n        return (\n          <p\n            className={classNames(\n              `notion-text`,\n              blockColor && `notion-${blockColor}`\n            )}\n          >\n            {renderChildText(blockValue.properties.title)}\n          </p>\n        );\n      case \"bulleted_list\":\n      case \"numbered_list\":\n        const wrapList = (content: React.ReactNode, start?: number) =>\n          blockValue.type === \"bulleted_list\" ? (\n            <ul className=\"notion-list notion-list-disc\">{content}</ul>\n          ) : (\n            <ol start={start} className=\"notion-list notion-list-numbered\">\n              {content}\n            </ol>\n          );\n\n        let output: JSX.Element | null = null;\n\n        if (blockValue.content) {\n          output = (\n            <>\n              {blockValue.properties && (\n                <li>{renderChildText(blockValue.properties.title)}</li>\n              )}\n              {wrapList(children)}\n            </>\n          );\n        } else {\n          output = blockValue.properties ? (\n            <li>{renderChildText(blockValue.properties.title)}</li>\n          ) : null;\n        }\n\n        const isTopLevel =\n          block.value.type !== blockMap[block.value.parent_id].value.type;\n        const start = getListNumber(blockValue.id, blockMap);\n\n        return isTopLevel ? wrapList(output, start) : output;\n\n      case \"image\":\n      case \"embed\":\n      case \"figma\":\n      case \"video\":\n        const value = block.value as ContentValueType;\n\n        return (\n          <figure\n            className=\"notion-asset-wrapper\"\n            style={\n              value.format !== undefined\n                ? { width: value.format.block_width }\n                : undefined\n            }\n          >\n            <Asset block={block} mapImageUrl={mapImageUrl} />\n\n            {value.properties.caption && (\n              <figcaption className=\"notion-image-caption\">\n                {renderChildText(value.properties.caption)}\n              </figcaption>\n            )}\n          </figure>\n        );\n      case \"code\": {\n        if (blockValue.properties.title) {\n          const content = blockValue.properties.title[0][0];\n          const language = blockValue.properties.language[0][0];\n          return (\n            <Code\n              key={blockValue.id}\n              language={language || \"\"}\n              code={content}\n            />\n          );\n        }\n        break;\n      }\n      case \"column_list\":\n        return <div className=\"notion-row\">{children}</div>;\n      case \"column\":\n        const spacerWith = 46;\n        const ratio = blockValue.format.column_ratio;\n        const columns = Number((1 / ratio).toFixed(0));\n        const spacerTotalWith = (columns - 1) * spacerWith;\n        const width = `calc((100% - ${spacerTotalWith}px) * ${ratio})`;\n        return (\n          <>\n            <div className=\"notion-column\" style={{ width }}>\n              {children}\n            </div>\n            <div className=\"notion-spacer\" style={{ width: spacerWith }} />\n          </>\n        );\n      case \"quote\":\n        if (!blockValue.properties) return null;\n        return (\n          <blockquote className=\"notion-quote\">\n            {renderChildText(blockValue.properties.title)}\n          </blockquote>\n        );\n      case \"collection_view\":\n        if (!block) return null;\n\n        const collectionView = block?.collection?.types[0];\n\n        return (\n          <div>\n            <h3 className=\"notion-h3\">\n              {renderChildText(block.collection?.title!)}\n            </h3>\n\n            {collectionView?.type === \"table\" && (\n              <div style={{ maxWidth: \"100%\", marginTop: 5 }}>\n                <table className=\"notion-table\">\n                  <thead>\n                    <tr className=\"notion-tr\">\n                      {collectionView.format?.table_properties\n                        ?.filter(p => p.visible)\n                        .map((gp, index) => (\n                          <th\n                            className=\"notion-th\"\n                            key={index}\n                            style={{ minWidth: gp.width }}\n                          >\n                            {block.collection?.schema[gp.property]?.name}\n                          </th>\n                        ))}\n                    </tr>\n                  </thead>\n\n                  <tbody>\n                    {block?.collection?.data.map((row, index) => (\n                      <tr className=\"notion-tr\" key={index}>\n                        {collectionView.format?.table_properties\n                          ?.filter(p => p.visible)\n                          .map((gp, index) => (\n                            <td\n                              key={index}\n                              className={\n                                \"notion-td \" +\n                                (gp.property === \"title\" ? \"notion-bold\" : \"\")\n                              }\n                            >\n                              {\n                                renderChildText(\n                                  row[\n                                    block.collection?.schema[gp.property]?.name!\n                                  ]\n                                )!\n                              }\n                            </td>\n                          ))}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            )}\n\n            {collectionView?.type === \"gallery\" && (\n              <div className=\"notion-gallery\">\n                {block.collection?.data.map((row, i) => (\n                  <div key={`col-${i}`} className=\"notion-gallery-card\">\n                    <div className=\"notion-gallery-content\">\n                      {collectionView.format?.gallery_properties\n                        ?.filter(p => p.visible)\n                        .map((gp, idx) => (\n                          <p\n                            key={idx + \"item\"}\n                            className={\n                              \"notion-gallery-data \" +\n                              (idx === 0 ? \"is-first\" : \"\")\n                            }\n                          >\n                            {getTextContent(\n                              row[block.collection?.schema[gp.property].name!]\n                            )}\n                          </p>\n                        ))}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        );\n      case \"callout\":\n        return (\n          <div\n            className={classNames(\n              \"notion-callout\",\n              blockValue.format.block_color &&\n                `notion-${blockValue.format.block_color}`,\n              blockValue.format.block_color &&\n                `notion-${blockValue.format.block_color}_co`\n            )}\n          >\n            <div>\n              <PageIcon block={block} mapImageUrl={mapImageUrl} />\n            </div>\n            <div className=\"notion-callout-text\">\n              {renderChildText(blockValue.properties.title)}\n            </div>\n          </div>\n        );\n      case \"bookmark\":\n        const link = blockValue.properties.link;\n        const title = blockValue.properties.title ?? link;\n        const description = blockValue.properties.description;\n        const block_color = blockValue.format?.block_color;\n        const bookmark_icon = blockValue.format?.bookmark_icon;\n        const bookmark_cover = blockValue.format?.bookmark_cover;\n\n        return (\n          <div className=\"notion-row\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className={classNames(\n                \"notion-bookmark\",\n                block_color && `notion-${block_color}`\n              )}\n              href={link[0][0]}\n            >\n              <div>\n                <div className=\"notion-bookmark-title\">\n                  {renderChildText(title)}\n                </div>\n                {description && (\n                  <div className=\"notion-bookmark-description\">\n                    {renderChildText(description)}\n                  </div>\n                )}\n\n                <div className=\"notion-bookmark-link\">\n                  {bookmark_icon && (\n                    <img src={bookmark_icon} alt={getTextContent(title)} />\n                  )}\n                  <div>{renderChildText(link)}</div>\n                </div>\n              </div>\n              {bookmark_cover && (\n                <div className=\"notion-bookmark-image\">\n                  <img src={bookmark_cover} alt={getTextContent(title)} />\n                </div>\n              )}\n            </a>\n          </div>\n        );\n      case \"toggle\":\n        return (\n          <details className=\"notion-toggle\">\n            <summary>{renderChildText(blockValue.properties.title)}</summary>\n            <div>{children}</div>\n          </details>\n        );\n      default:\n        if (process.env.NODE_ENV !== \"production\") {\n          console.log(\"Unsupported type \" + block?.value?.type);\n        }\n        return <div />;\n    }\n    return null;\n  };\n\n  // render a custom component first if passed.\n  if (\n    customBlockComponents &&\n    customBlockComponents[blockValue?.type] &&\n    // Do not use custom component for base page block\n    level !== 0\n  ) {\n    const CustomComponent = customBlockComponents[blockValue?.type]!;\n    return (\n      <CustomComponent\n        renderComponent={renderComponent}\n        blockMap={blockMap}\n        blockValue={blockValue as BlockValueProp<typeof blockValue.type>}\n        level={level}\n      >\n        {children}\n      </CustomComponent>\n    );\n  }\n\n  return renderComponent();\n};\n","import React from \"react\";\nimport {\n  BlockMapType,\n  MapPageUrl,\n  MapImageUrl,\n  CustomBlockComponents,\n  CustomDecoratorComponents\n} from \"./types\";\nimport { Block } from \"./block\";\nimport { defaultMapImageUrl, defaultMapPageUrl } from \"./utils\";\n\nexport interface NotionRendererProps {\n  blockMap: BlockMapType;\n  fullPage?: boolean;\n  hideHeader?: boolean;\n  mapPageUrl?: MapPageUrl;\n  mapImageUrl?: MapImageUrl;\n\n  currentId?: string;\n  level?: number;\n  customBlockComponents?: CustomBlockComponents;\n  customDecoratorComponents?: CustomDecoratorComponents;\n}\n\nexport const NotionRenderer: React.FC<NotionRendererProps> = ({\n  level = 0,\n  currentId,\n  mapPageUrl = defaultMapPageUrl,\n  mapImageUrl = defaultMapImageUrl,\n  ...props\n}) => {\n  const { blockMap } = props;\n  const id = currentId || Object.keys(blockMap)[0];\n  const currentBlock = blockMap[id];\n\n  if (!currentBlock) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.warn(\"error rendering block\", currentId);\n    }\n    return null;\n  }\n\n  return (\n    <Block\n      key={id}\n      level={level}\n      block={currentBlock}\n      mapPageUrl={mapPageUrl}\n      mapImageUrl={mapImageUrl}\n      {...props}\n    >\n      {currentBlock?.value?.content?.map(contentId => (\n        <NotionRenderer\n          key={contentId}\n          currentId={contentId}\n          level={level + 1}\n          mapPageUrl={mapPageUrl}\n          mapImageUrl={mapImageUrl}\n          {...props}\n        />\n      ))}\n    </Block>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}