[{"/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/index.js":"1","/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/App.js":"2","/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/Navbar.js":"3","/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/HomeContainer.js":"4","/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/Console.js":"5"},{"size":241,"mtime":1692842948180,"results":"6","hashOfConfig":"7"},{"size":3094,"mtime":1692843430496,"results":"8","hashOfConfig":"7"},{"size":1183,"mtime":1692843209563,"results":"9","hashOfConfig":"7"},{"size":6812,"mtime":1692843513774,"results":"10","hashOfConfig":"7"},{"size":3509,"mtime":1692842948179,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"12yrlnz",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"15"},"/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/index.js",[],[],[],"/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/App.js",["29","30","31","32"],[],"/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/Navbar.js",[],[],"/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/HomeContainer.js",["33","34","35"],[],"/Users/shubhadamohite/Documents/GitHub/shubhadamohite/src/Console.js",["36","37","38","39"],[],"// Console.js\nimport React, { useState } from 'react';\nimport inspect from './inspect.svg';\nimport toggle from './toggledevice.svg';\nimport sidebar from './sidebar.svg';\nimport stop from './stop-sign.svg';\nimport downArr from './down-arrow.svg';\nimport eye from './eye.svg';\nimport settings from './settings.svg';\n\nconst Console = () => {\n  const [activeTab, setActiveTab] = useState('Console');\n  const [consoleInput, setConsoleInput] = useState('');\n  const [consoleOutput, setConsoleOutput] = useState([]);\n\n  const handleConsoleInput = (e) => {\n    setConsoleInput(e.target.value);\n  };\n\n  const handleConsoleSubmit = () => {\n    // Process the consoleInput (e.g., execute a command)\n    // For this example, let's just echo the input\n    setConsoleOutput([...consoleOutput, `> ${consoleInput}`]);\n    setConsoleInput('');\n  };\n  const a = \"dsdsd\"\n\n  const tabs = ['Elements','Console',  'Network', 'Sources', 'Performance'];\n\n  return (\n    <div className=\"flex flex-col\" >\n      <div className=\"p-2 bg-gray-400\">\n        <div className=\"flex\">\n        <img src={inspect} className=\"w-6 mr-6 hover:bg-gray-300\" alt=\"inspect-icon\" />\n      <img src={toggle} className=\"w-6 hover:bg-gray-300\" alt=\"toggle-device\" />\n          {tabs.map((tab) => (\n            <button\n              key={tab}\n              className={`px-4 py-2 ${\n                activeTab === tab\n                  ? 'bg-gray-300'\n                  : ' hover:bg-gray-300'\n              }`}\n              \n            >\n              {tab}\n            </button>\n          ))}\n        </div>\n      </div>\n      <div className=\" \">\n        {activeTab === 'Console' && (\n          <>\n          <div >\n            <div className='flex flex-row bg-gray-400 p-2'>\n          <img src={sidebar} className=\"w-5 mr-6  hover:bg-gray-300\" alt=\"sidebar\" />\n          <img src={stop} className=\"w-5 mr-6 hover:bg-gray-300\" alt=\"stop-icon\" />\n          <p>top&nbsp;</p>\n          <img src={downArr} className=\"w-2 mr-6 hover:bg-gray-300\" alt=\"down-arr\" />\n          <img src={eye} className=\"w-5 mr-6 hover:bg-gray-300\" alt=\"eye-icon\" />\n          <input type=\"text\" defaultValue=\"Filter\" readOnly className='w-15 text-gray-500 bg-gray-300'/>\n          <img src={settings} className=\"w-5 ml-2 mr-96 hover:bg-gray-300\" alt=\"settings-icon\" />\n          </div>\n          <div className='ml-2 pt-6'>\n          <span >{'>'} Shubhada.origin</span>\n          </div>\n          <span className='text-gray-600 ml-2'> {'->'} \"Pune, India\"</span>\n          <br/>\n          <div className='ml-2 pt-2'>\n          <span>{'>'} Shubhada.education</span>\n          </div>\n          <span className='text-gray-600 ml-2'> {'->'} \"Syracuse University\"</span>\n          <div className='ml-2 pt-2'>\n          <span>{'>'} Shubhada.major</span>\n          </div>\n          <span className='text-gray-600 ml-2'> {'->'} \"Computer Science\"</span>\n          <div className='ml-2 pt-2'>\n          <span>{'>'} Shubhada.workExperience.latest</span>\n          </div>\n          <span className='text-gray-600 ml-2'> {'->'} \"Company: TruWeather Solutions Inc.\" <p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \"Position: Software Engineer\" </p></span>\n          <div className='ml-2 pt-2'>\n          <span>{'>'} Shubhada.interests</span>\n          </div>\n          <span className='text-gray-600 ml-2'> {'->'} \"Drawing, Cooking, Yoga, Podcasts, Music\" </span>\n          </div>\n          </>\n        )}\n        {/* Render other tab content here */}\n      </div>\n    </div>\n  );\n};\n\nexport default Console;\n",{"ruleId":"40","severity":1,"message":"41","line":2,"column":27,"nodeType":"42","messageId":"43","endLine":2,"endColumn":33},{"ruleId":"40","severity":1,"message":"44","line":14,"column":10,"nodeType":"42","messageId":"43","endLine":14,"endColumn":24},{"ruleId":"45","severity":1,"message":"46","line":33,"column":6,"nodeType":"47","endLine":33,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":50,"column":11,"nodeType":"51","endLine":56,"endColumn":15},{"ruleId":"49","severity":1,"message":"50","line":22,"column":9,"nodeType":"51","endLine":26,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":85,"column":9,"nodeType":"51","endLine":89,"endColumn":11},{"ruleId":"49","severity":1,"message":"50","line":127,"column":9,"nodeType":"51","endLine":131,"endColumn":11},{"ruleId":"40","severity":1,"message":"52","line":12,"column":21,"nodeType":"42","messageId":"43","endLine":12,"endColumn":33},{"ruleId":"40","severity":1,"message":"53","line":16,"column":9,"nodeType":"42","messageId":"43","endLine":16,"endColumn":27},{"ruleId":"40","severity":1,"message":"54","line":20,"column":9,"nodeType":"42","messageId":"43","endLine":20,"endColumn":28},{"ruleId":"40","severity":1,"message":"55","line":26,"column":9,"nodeType":"42","messageId":"43","endLine":26,"endColumn":10},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'NotionRenderer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["56"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setActiveTab' is assigned a value but never used.","'handleConsoleInput' is assigned a value but never used.","'handleConsoleSubmit' is assigned a value but never used.","'a' is assigned a value but never used.",{"desc":"57","fix":"58"},"Update the dependencies array to be: [data]",{"range":"59","text":"60"},[946,948],"[data]"]